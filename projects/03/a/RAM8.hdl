// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        // select register to set load signal 
        DMux8Way(in=load, sel=address, a=demxloada, b=demxloadb, c=demxloadc, d=demxloadd, e=demxloade, f=demxloadf, g=demxloadg, h=demxloadh);
        
        Register(in=in, load=demxloada, out=outmuxa);
        Register(in=in, load=demxloadb, out=outmuxb);
        Register(in=in, load=demxloadc, out=outmuxc);
        Register(in=in, load=demxloadd, out=outmuxd);
        Register(in=in, load=demxloade, out=outmuxe);
        Register(in=in, load=demxloadf, out=outmuxf);
        Register(in=in, load=demxloadg, out=outmuxg);
        Register(in=in, load=demxloadh, out=outmuxh);
        
        // select output from selected register
        Mux8Way16(a=outmuxa, b=outmuxb, c=outmuxc, d=outmuxd, e=outmuxe, f=outmuxf, g=outmuxg, h=outmuxh, sel=address, out=out);
}

