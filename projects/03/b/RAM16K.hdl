// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
        // select RAM4K chip
        DMux8Way(in=load, sel=address[0..2], a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);
        
        RAM4K(in=in,load=loadA, address=address[3..13], out=RAM4kA);
        RAM4K(in=in,load=loadB, address=address[3..13], out=RAM4kB);
        RAM4K(in=in,load=loadC, address=address[3..13], out=RAM4kC);
        RAM4K(in=in,load=loadD, address=address[3..13], out=RAM4kD);
        RAM4K(in=in,load=loadE, address=address[3..13], out=RAM4kE);
        RAM4K(in=in,load=loadF, address=address[3..13], out=RAM4kF);
        RAM4K(in=in,load=loadG, address=address[3..13], out=RAM4kG);
        RAM4K(in=in,load=loadH, address=address[3..13], out=RAM4kH);
        
        // select output from selected RAM4K
        Mux8Way16(a=RAM4kA, b=RAM4kB, c=RAM4kC, d=RAM4kD, e=RAM4kE, f=RAM4kF, g=RAM4kG, h=RAM4kH, sel=address[0..2], out=out);
}